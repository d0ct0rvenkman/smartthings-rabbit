
image: docker:stable
services:
  - docker:dind

stages:
  - test
  - build
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_SHA_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest


syntax-5:
  stage: test
  image: php:5
  tags:
    - docker
  script:
    - find . -name "*.php" -print0 | xargs -0 -n1 -P8 php -l

syntax-7:
  stage: test
  image: php:7
  tags:
    - docker
  script:
    - find . -name "*.php" -print0 | xargs -0 -n1 -P8 php -l

build_container:
  stage: build
  tags:
    - docker
    - privileged
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_TEST_IMAGE -t $CONTAINER_SHA_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_SHA_IMAGE


release-image:
  tags:
    - docker
    - privileged
  stage: release
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

push-to-kube:
  tags:
    - docker
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster k8s --server="${CI_K8S_SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CI_K8S_CADATA}
    - kubectl config set-credentials gitlab --token="${CI_K8S_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - kubectl -n ${CI_K8S_NAMESPACE} set image deployment rabbit-worker rabbit-worker=${CONTAINER_SHA_IMAGE}
